import { EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle, StringSelectMenuBuilder } from 'discord.js';

export default class DataPrivacyButtonHandler {
    constructor(client) {
        this.client = client;
    }

    async handleDataDeletion(interaction) {
        const customId = interaction.customId;
        const userId = customId.split('_').pop();
        
        // V√©rifier les permissions
        if (userId !== interaction.user.id && !interaction.member.permissions.has('Administrator')) {
            return await interaction.reply({
                content: '‚ùå Vous ne pouvez pas g√©rer les donn√©es d\'autres utilisateurs.',
                ephemeral: true
            });
        }

        const user = await interaction.client.users.fetch(userId);

        if (customId.includes('confirm')) {
            await this.confirmDataDeletion(interaction, user);
        } else if (customId.includes('preview')) {
            await this.previewUserData(interaction, user);
        } else if (customId.includes('partial')) {
            await this.showPartialDeletionOptions(interaction, user);
        } else if (customId.includes('cancel')) {
            await this.cancelDataDeletion(interaction);
        }
    }

    async confirmDataDeletion(interaction, user) {
        // Simuler la suppression des donn√©es
        const deletionReport = await this.performDataDeletion(user);

        const confirmEmbed = new EmbedBuilder()
            .setTitle('‚úÖ **DONN√âES SUPPRIM√âES AVEC SUCC√àS**')
            .setDescription(`
**Utilisateur :** ${user.tag}
**Date de suppression :** <t:${Math.floor(Date.now() / 1000)}:F>

**üìä Rapport de suppression :**
${deletionReport}

**üîí Conformit√© RGPD :**
‚Ä¢ Toutes les donn√©es ont √©t√© supprim√©es d√©finitivement
‚Ä¢ Aucune sauvegarde n'a √©t√© conserv√©e
‚Ä¢ Logs de suppression g√©n√©r√©s automatiquement

**üìß Un email de confirmation sera envoy√© sous 24h**`)
            .setColor('#00ff00')
            .setTimestamp()
            .setFooter({ text: 'Team7 ‚Ä¢ Suppression RGPD confirm√©e' })
            .setImage('https://i.imgur.com/s74nSIc.png');

        await interaction.update({
            embeds: [confirmEmbed],
            components: []
        });
    }

    async previewUserData(interaction, user) {
        const dataPreview = await this.getUserDataPreview(user);

        const previewEmbed = new EmbedBuilder()
            .setTitle('üëÅÔ∏è **APER√áU DES DONN√âES UTILISATEUR**')
            .setDescription(`
**Utilisateur :** ${user.tag}
**ID :** ${user.id}

${dataPreview}

**‚ö†Ô∏è Ces donn√©es seront supprim√©es d√©finitivement**`)
            .setColor('#ffaa00')
            .setTimestamp()
            .setFooter({ text: 'Team7 ‚Ä¢ Aper√ßu des donn√©es' })
            .setImage('https://i.imgur.com/s74nSIc.png');

        const backButton = new ActionRowBuilder()
            .addComponents(
                new ButtonBuilder()
                    .setCustomId(`delete_data_confirm_${user.id}`)
                    .setLabel('‚úÖ Confirmer la suppression')
                    .setStyle(ButtonStyle.Danger),
                new ButtonBuilder()
                    .setCustomId(`delete_data_cancel_${user.id}`)
                    .setLabel('üîô Retour')
                    .setStyle(ButtonStyle.Secondary)
            );

        await interaction.update({
            embeds: [previewEmbed],
            components: [backButton]
        });
    }

    async showPartialDeletionOptions(interaction, user) {
        const selectMenu = new ActionRowBuilder()
            .addComponents(
                new StringSelectMenuBuilder()
                    .setCustomId(`partial_delete_${user.id}`)
                    .setPlaceholder('S√©lectionnez les types de donn√©es √† supprimer')
                    .setMinValues(1)
                    .setMaxValues(6)
                    .addOptions([
                        {
                            label: 'Donn√©es de mod√©ration',
                            description: 'Avertissements, sanctions, logs',
                            value: 'moderation',
                            emoji: '‚öñÔ∏è'
                        },
                        {
                            label: 'Messages archiv√©s',
                            description: 'Messages supprim√©s sauvegard√©s',
                            value: 'messages',
                            emoji: 'üí¨'
                        },
                        {
                            label: 'Statistiques d\'activit√©',
                            description: 'Donn√©es d\'utilisation du bot',
                            value: 'stats',
                            emoji: 'üìä'
                        },
                        {
                            label: 'Donn√©es de tickets',
                            description: 'Historique des tickets support',
                            value: 'tickets',
                            emoji: 'üé´'
                        },
                        {
                            label: 'Pr√©f√©rences utilisateur',
                            description: 'Configurations personnelles',
                            value: 'preferences',
                            emoji: '‚öôÔ∏è'
                        },
                        {
                            label: 'Logs de connexion',
                            description: 'Historique de connexion au serveur',
                            value: 'logs',
                            emoji: 'üîó'
                        }
                    ])
            );

        const partialEmbed = new EmbedBuilder()
            .setTitle('‚öôÔ∏è **SUPPRESSION PARTIELLE DE DONN√âES**')
            .setDescription(`
**Utilisateur :** ${user.tag}

S√©lectionnez les types de donn√©es que vous souhaitez supprimer.
Cette option vous permet de garder certaines donn√©es tout en supprimant d'autres.

**üîí Toutes les suppressions sont conformes au RGPD**`)
            .setColor('#0099ff')
            .setImage('https://i.imgur.com/s74nSIc.png');

        await interaction.update({
            embeds: [partialEmbed],
            components: [selectMenu]
        });
    }

    async cancelDataDeletion(interaction) {
        const cancelEmbed = new EmbedBuilder()
            .setTitle('‚ùå **SUPPRESSION ANNUL√âE**')
            .setDescription(`
**Op√©ration annul√©e par :** ${interaction.user.tag}

Aucune donn√©e n'a √©t√© supprim√©e.
Vous pouvez relancer la commande \`/delete-my-data\` √† tout moment.

**üí° Rappel :** Vous avez le droit de demander la suppression de vos donn√©es √† tout moment conform√©ment au RGPD.`)
            .setColor('#666666')
            .setTimestamp()
            .setFooter({ text: 'Team7 ‚Ä¢ Op√©ration annul√©e' })
            .setImage('https://i.imgur.com/s74nSIc.png');

        await interaction.update({
            embeds: [cancelEmbed],
            components: []
        });
    }

    async handleCharteNavigation(interaction) {
        const section = interaction.customId.replace('charte_', '');
        
        const embeds = {
            fonctionnalites: this.getFonctionnalitesEmbed(),
            regles: this.getReglesEmbed(),
            donnees: this.getDonneesEmbed(),
            support: this.getSupportEmbed(),
            sanctions: this.getSanctionsEmbed(),
            maj: this.getMajEmbed(),
            contact: this.getContactEmbed(),
            accepter: this.getAcceptationEmbed()
        };

        const embed = embeds[section];
        if (!embed) return;

        const backButton = new ActionRowBuilder()
            .addComponents(
                new ButtonBuilder()
                    .setCustomId('charte_retour')
                    .setLabel('üîô Retour au menu principal')
                    .setStyle(ButtonStyle.Secondary)
            );

        await interaction.update({
            embeds: [embed],
            components: [backButton]
        });
    }

    getFonctionnalitesEmbed() {
        return new EmbedBuilder()
            .setTitle('üõ†Ô∏è **FONCTIONNALIT√âS ET UTILISATION DU BOT**')
            .setDescription(`
**1.1 Commandes Disponibles**

**‚úÖ Mod√©ration :**
‚Ä¢ \`/ban [@user] [raison]\` ‚Üí Bannir un membre
‚Ä¢ \`/mute [@user] [dur√©e]\` ‚Üí Rendre muet un membre
‚Ä¢ \`/clear [nombre]\` ‚Üí Supprimer des messages
‚Ä¢ \`/warn [@user] [raison]\` ‚Üí Avertir un membre

**‚úÖ Utilitaires :**
‚Ä¢ \`/info [@user]\` ‚Üí Afficher les infos d'un membre
‚Ä¢ \`/serverinfo\` ‚Üí Statistiques du serveur
‚Ä¢ \`/help\` ‚Üí Aide et commandes disponibles

**‚úÖ Gestion de donn√©es :**
‚Ä¢ \`/delete-my-data\` ‚Üí Supprimer ses donn√©es (RGPD)
‚Ä¢ \`/charte\` ‚Üí Afficher cette charte

**üéØ Toutes les commandes respectent les permissions Discord**`)
            .setColor('#0099ff')
            .setImage('https://i.imgur.com/s74nSIc.png');
    }

    getReglesEmbed() {
        return new EmbedBuilder()
            .setTitle('üìã **R√àGLES D\'UTILISATION**')
            .setDescription(`
**2.1 Obligations des Utilisateurs**

**‚ùå Interdiction d'utiliser le bot pour :**
‚Ä¢ Harceler, spammer ou insulter (‚Ü™ sanction : mute/ban)
‚Ä¢ Exploiter des bugs (‚Ü™ signalement au d√©veloppeur obligatoire)
‚Ä¢ Violer les r√®gles Discord (‚Ü™ bannissement)

**2.2 Restrictions d'Acc√®s**
‚Ä¢ Seuls les **mod√©rateurs** peuvent utiliser les commandes de mod√©ration
‚Ä¢ Les commandes admin (\`/config\`, \`/backup\`) sont r√©serv√©es au **Responsable Technique**

**‚öñÔ∏è Le non-respect de ces r√®gles entra√Æne des sanctions imm√©diates**`)
            .setColor('#ff6600')
            .setImage('https://i.imgur.com/s74nSIc.png');
    }

    getDonneesEmbed() {
        return new EmbedBuilder()
            .setTitle('üîê **VIE PRIV√âE ET DONN√âES**')
            .setDescription(`
**3.1 Collecte et Stockage**

**üîê Le bot ne stocke PAS :**
‚Ä¢ Vos messages priv√©s
‚Ä¢ Votre adresse IP ou localisation
‚Ä¢ Vos donn√©es bancaires ou personnelles sensibles

**üìÅ Donn√©es enregistr√©es (n√©cessaires au fonctionnement) :**
‚Ä¢ Pseudos et IDs des membres
‚Ä¢ Logs de mod√©ration (conserv√©s 30 jours maximum)
‚Ä¢ Statistiques d'utilisation anonymis√©es

**üõ°Ô∏è Conformit√© RGPD :**
‚Ä¢ Droit √† la suppression via \`/delete-my-data\`
‚Ä¢ Droit d'acc√®s √† vos donn√©es
‚Ä¢ Donn√©es chiffr√©es et s√©curis√©es`)
            .setColor('#00ff00')
            .setImage('https://i.imgur.com/s74nSIc.png');
    }

    getSupportEmbed() {
        return new EmbedBuilder()
            .setTitle('üîß **MAINTENANCE ET SUPPORT**')
            .setDescription(`
**4.1 Disponibilit√©**
‚Ä¢ Le bot est actif **24h/24**, sauf :
  - Maintenance (annonc√©e 48h √† l'avance)
  - Probl√®me technique (correctif sous 12h)

**4.2 Signalement des Bugs**
‚Ä¢ Envoyer un MP au **D√©veloppeur AidoTokihisa**
‚Ä¢ Utiliser \`/report-bug [description]\`
‚Ä¢ üéÅ **R√©compense possible** pour les bugs critiques !

**4.3 Support Technique**
‚Ä¢ R√©ponse sous 24h maximum
‚Ä¢ Support prioritaire pour les administrateurs
‚Ä¢ Documentation compl√®te disponible`)
            .setColor('#9932cc')
            .setImage('https://i.imgur.com/s74nSIc.png');
    }

    getSanctionsEmbed() {
        return new EmbedBuilder()
            .setTitle('‚öñÔ∏è **SANCTIONS ET SUSPENSION**')
            .setDescription(`
**5.1 Abus du Bot**
‚Ä¢ **1er avertissement :** Mute temporaire
‚Ä¢ **2e abus :** Bannissement du bot + rapport aux mod√©rateurs
‚Ä¢ **Abus grave :** Bannissement imm√©diat

**5.2 Droit de Retrait**
Le d√©veloppeur peut d√©sactiver le bot sans pr√©avis en cas de :
‚Ä¢ Violation grave des r√®gles
‚Ä¢ D√©cision du Conseil d'Administration
‚Ä¢ Probl√®me de s√©curit√© majeur

**‚ö†Ô∏è Les sanctions sont appliqu√©es de mani√®re √©quitable et transparente**`)
            .setColor('#ff0000')
            .setImage('https://i.imgur.com/s74nSIc.png');
    }

    getMajEmbed() {
        return new EmbedBuilder()
            .setTitle('üîÑ **MODIFICATIONS ET MISES √Ä JOUR**')
            .setDescription(`
**6.1 Nouvelles Fonctionnalit√©s**
‚Ä¢ Les nouvelles fonctionnalit√©s sont vot√©es par le CA
‚Ä¢ Utiliser \`/vote [feature]\` pour proposer des am√©liorations
‚Ä¢ Historique des MAJ disponible dans #changelog

**6.2 Notification des Changements**
‚Ä¢ Toutes les modifications importantes sont annonc√©es
‚Ä¢ Les utilisateurs sont inform√©s 48h avant les changements majeurs
‚Ä¢ La charte est mise √† jour automatiquement

**üìà Le bot √©volue constamment pour mieux vous servir !**`)
            .setColor('#ffaa00')
            .setImage('https://i.imgur.com/s74nSIc.png');
    }

    getContactEmbed() {
        return new EmbedBuilder()
            .setTitle('üìû **CONTACT ET INFORMATIONS**')
            .setDescription(`
**üë®‚Äçüíª D√©veloppeur Principal :**
‚Ä¢ **AidoTokihisa** - Responsable Technique Team7
‚Ä¢ Discord : AidoTokihisa#xxxx
‚Ä¢ Email : support@team7.bot

**üè¢ Organisation :**
‚Ä¢ **Team7** - √âquipe de d√©veloppement officielle
‚Ä¢ Site web : https://team7.gg
‚Ä¢ Documentation : https://docs.team7.gg

**ü¶ä Ce bot est un outil au service de la communaut√©**
Son utilisation abusive entra√Ænera des sanctions.

**Sign√© :** [AidoTokihisa] - D√©veloppeur Officiel Team7`)
            .setColor('#ff6600')
            .setImage('https://i.imgur.com/s74nSIc.png');
    }

    getAcceptationEmbed() {
        return new EmbedBuilder()
            .setTitle('‚úÖ **CHARTE ACCEPT√âE**')
            .setDescription(`
**Merci ${interaction.user.tag} !**

Vous avez accept√© la charte officielle du bot Team7.

**üìã R√©capitulatif de votre acceptation :**
‚Ä¢ Date : <t:${Math.floor(Date.now() / 1000)}:F>
‚Ä¢ Version de la charte : 1.0
‚Ä¢ Statut : ‚úÖ Accept√©e

**üéØ Vous pouvez maintenant utiliser toutes les fonctionnalit√©s du bot en toute s√©r√©nit√© !**

**üí° Rappel :** Vous pouvez consulter cette charte √† tout moment avec \`/charte\``)
            .setColor('#00ff00')
            .setTimestamp()
            .setFooter({ text: 'Team7 ‚Ä¢ Charte accept√©e avec succ√®s' })
            .setImage('https://i.imgur.com/s74nSIc.png');
    }

    // M√©thodes utilitaires pour la gestion des donn√©es
    async performDataDeletion(user) {
        // Simuler la suppression des donn√©es
        const deletedItems = {
            moderation: Math.floor(Math.random() * 10),
            messages: Math.floor(Math.random() * 50),
            tickets: Math.floor(Math.random() * 5),
            preferences: 1,
            logs: Math.floor(Math.random() * 20),
            stats: 1
        };

        return `
‚Ä¢ **${deletedItems.moderation}** entr√©es de mod√©ration supprim√©es
‚Ä¢ **${deletedItems.messages}** messages archiv√©s supprim√©s
‚Ä¢ **${deletedItems.tickets}** tickets supprim√©s
‚Ä¢ **${deletedItems.preferences}** configuration utilisateur supprim√©e
‚Ä¢ **${deletedItems.logs}** logs de connexion supprim√©s
‚Ä¢ **${deletedItems.stats}** profil statistique supprim√©

**Total :** ${Object.values(deletedItems).reduce((a, b) => a + b, 0)} entr√©es supprim√©es`;
    }

    async getUserDataPreview(user) {
        // Simuler l'aper√ßu des donn√©es
        return `
**üî∏ Donn√©es de mod√©ration :**
‚Ä¢ 3 avertissements archiv√©s
‚Ä¢ 1 mute temporaire (expir√©)
‚Ä¢ 0 bannissement

**üî∏ Donn√©es d'activit√© :**
‚Ä¢ 15 messages supprim√©s archiv√©s
‚Ä¢ 2 tickets support cr√©√©s
‚Ä¢ Derni√®re activit√© : il y a 2 jours

**üî∏ Donn√©es de configuration :**
‚Ä¢ Notifications activ√©es
‚Ä¢ Langue : Fran√ßais
‚Ä¢ Timezone : Europe/Paris

**üìä Taille totale des donn√©es : ~2.3 KB**`;
    }
};
