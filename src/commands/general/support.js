import { SlashCommandBuilder, EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle, ModalBuilder, TextInputBuilder, TextInputStyle } from 'discord.js';

import AccessRestriction from '../../utils/AccessRestriction.js';
export default {
    data: new SlashCommandBuilder()
        .setName('support')
        .setDescription('üÜò Obtenir de l\'aide et contacter le support Team7')
        .addStringOption(option =>
            option.setName('type')
                .setDescription('Type de support demand√©')
                .addChoices(
                    { name: 'üêõ Signaler un bug', value: 'bug' },
                    { name: '‚ùì Question g√©n√©rale', value: 'question' },
                    { name: 'üîß Aide technique', value: 'technical' },
                    { name: 'üìã Demande RGPD', value: 'gdpr' },
                    { name: 'üí° Suggestion d\'am√©lioration', value: 'suggestion' }
                )
                .setRequired(false)
        ),

    async execute(interaction) {
        // === V√âRIFICATION D'ACC√àS GLOBALE ===
        const accessRestriction = new AccessRestriction();
        const hasAccess = await accessRestriction.checkAccess(interaction);
        if (!hasAccess) {
            return; // Acc√®s refus√©, message d√©j√† envoy√©
        }


        const supportType = interaction.options.getString('type');
        
        if (supportType) {
            // Traitement direct selon le type
            await this.handleDirectSupport(interaction, supportType);
        } else {
            // Menu principal du support
            await this.showSupportMenu(interaction);
        }
    },

    async showSupportMenu(interaction) {
        const embed = new EmbedBuilder()
            .setTitle('üÜò **CENTRE DE SUPPORT TEAM7**')
            .setDescription('**Assistance professionnelle 24/7**\n\n*S√©lectionnez le type d\'aide dont vous avez besoin :*')
            .addFields(
                {
                    name: 'üêõ **Signalement de bugs**',
                    value: '‚Ä¢ Dysfonctionnements techniques\n‚Ä¢ Erreurs de commandes\n‚Ä¢ Probl√®mes d\'affichage\n‚Ä¢ Comportements inattendus',
                    inline: true
                },
                {
                    name: '‚ùì **Questions g√©n√©rales**',
                    value: '‚Ä¢ Utilisation des commandes\n‚Ä¢ Configuration du bot\n‚Ä¢ Fonctionnalit√©s disponibles\n‚Ä¢ Bonnes pratiques',
                    inline: true
                },
                {
                    name: 'üîß **Support technique**',
                    value: '‚Ä¢ Probl√®mes de permissions\n‚Ä¢ Configuration serveur\n‚Ä¢ Int√©grations avanc√©es\n‚Ä¢ Optimisation performance',
                    inline: true
                },
                {
                    name: 'üìã **Demandes RGPD**',
                    value: '‚Ä¢ Droit d\'acc√®s aux donn√©es\n‚Ä¢ Portabilit√© des donn√©es\n‚Ä¢ Droit √† l\'effacement\n‚Ä¢ Rectification d\'informations',
                    inline: true
                },
                {
                    name: 'üí° **Suggestions**',
                    value: '‚Ä¢ Nouvelles fonctionnalit√©s\n‚Ä¢ Am√©liorations UX\n‚Ä¢ Optimisations\n‚Ä¢ Retours d\'exp√©rience',
                    inline: true
                },
                {
                    name: 'üìä **Informations support**',
                    value: `**Temps de r√©ponse :** < 2h en moyenne\n**Disponibilit√© :** 24/7\n**Langues :** Fran√ßais, Anglais\n**SLA :** 99.9% de disponibilit√©`,
                    inline: true
                }
            )
            .setColor('#3498db')
            .setThumbnail('https://i.imgur.com/s74nSIc.png')
            .setImage('https://i.imgur.com/s74nSIc.png')
            .setTimestamp()
            .setFooter({ 
                text: 'Team7 Support ‚Ä¢ Assistance professionnelle',
                iconURL: 'https://i.imgur.com/s74nSIc.png'
            });

        const actionRow1 = new ActionRowBuilder()
            .addComponents(
                new ButtonBuilder()
                    .setCustomId('support_bug')
                    .setLabel('üêõ Signaler un bug')
                    .setStyle(ButtonStyle.Danger),
                new ButtonBuilder()
                    .setCustomId('support_question')
                    .setLabel('‚ùì Question g√©n√©rale')
                    .setStyle(ButtonStyle.Primary),
                new ButtonBuilder()
                    .setCustomId('support_technical')
                    .setLabel('üîß Aide technique')
                    .setStyle(ButtonStyle.Secondary)
            );

        const actionRow2 = new ActionRowBuilder()
            .addComponents(
                new ButtonBuilder()
                    .setCustomId('support_gdpr')
                    .setLabel('üìã Demande RGPD')
                    .setStyle(ButtonStyle.Success),
                new ButtonBuilder()
                    .setCustomId('support_suggestion')
                    .setLabel('üí° Suggestion')
                    .setStyle(ButtonStyle.Secondary),
                new ButtonBuilder()
                    .setCustomId('support_emergency')
                    .setLabel('üö® Urgence')
                    .setStyle(ButtonStyle.Danger)
            );

        await interaction.reply({
            embeds: [embed],
            components: [actionRow1, actionRow2],
            ephemeral: false
        });
    },

    async handleDirectSupport(interaction, type) {
        let embed;
        let components = [];

        switch (type) {
            case 'bug':
                embed = this.createBugReportEmbed();
                components = [this.createBugReportButtons()];
                break;
            case 'question':
                embed = this.createQuestionEmbed();
                components = [this.createQuestionButtons()];
                break;
            case 'technical':
                embed = this.createTechnicalEmbed();
                components = [this.createTechnicalButtons()];
                break;
            case 'gdpr':
                embed = this.createGDPRSupportEmbed();
                components = [this.createGDPRButtons()];
                break;
            case 'suggestion':
                embed = this.createSuggestionEmbed();
                components = [this.createSuggestionButtons()];
                break;
        }

        await interaction.reply({
            embeds: [embed],
            components: components,
            ephemeral: true
        });
    },

    createBugReportEmbed() {
        return new EmbedBuilder()
            .setTitle('üêõ **SIGNALEMENT DE BUG**')
            .setDescription('**Aidez-nous √† am√©liorer Team7 Bot**')
            .addFields(
                {
                    name: 'üìã **Informations √† fournir**',
                    value: `‚Ä¢ **Description d√©taill√©e** : Que s'est-il pass√© ?\n‚Ä¢ **√âtapes de reproduction** : Comment reproduire le bug ?\n‚Ä¢ **R√©sultat attendu** : Que devrait-il se passer ?\n‚Ä¢ **Captures d'√©cran** : Si applicable\n‚Ä¢ **Environnement** : Serveur, salon, permissions`,
                    inline: false
                },
                {
                    name: '‚è±Ô∏è **D√©lais de traitement**',
                    value: `‚Ä¢ **Critique** : < 1h\n‚Ä¢ **Majeur** : < 4h\n‚Ä¢ **Mineur** : < 24h\n‚Ä¢ **Cosm√©tique** : < 72h`,
                    inline: true
                },
                {
                    name: 'üîÑ **Suivi**',
                    value: `‚Ä¢ **Accus√© de r√©ception** : Imm√©diat\n‚Ä¢ **Investigation** : Sous 2h\n‚Ä¢ **Correction** : Selon priorit√©\n‚Ä¢ **Notification** : Automatique`,
                    inline: true
                }
            )
            .setColor('#e74c3c')
            .setThumbnail('https://i.imgur.com/s74nSIc.png');
    },

    createQuestionEmbed() {
        return new EmbedBuilder()
            .setTitle('‚ùì **QUESTIONS G√âN√âRALES**')
            .setDescription('**FAQ et assistance utilisateur**')
            .addFields(
                {
                    name: 'üìö **Ressources disponibles**',
                    value: `‚Ä¢ **\`/help\`** : Documentation compl√®te\n‚Ä¢ **\`/charte\`** : Conditions d'utilisation\n‚Ä¢ **\`/info\`** : Informations utilisateur\n‚Ä¢ **Tutoriels** : Guides pas √† pas`,
                    inline: true
                },
                {
                    name: 'üîß **Commandes utiles**',
                    value: `‚Ä¢ **\`/diagnostic\`** : V√©rification syst√®me\n‚Ä¢ **\`/verify-bot\`** : Test fonctionnement\n‚Ä¢ **\`/config\`** : Configuration serveur\n‚Ä¢ **\`/stats\`** : Statistiques d√©taill√©es`,
                    inline: true
                },
                {
                    name: 'üí¨ **Types de questions**',
                    value: `‚Ä¢ Configuration initiale\n‚Ä¢ Utilisation des commandes\n‚Ä¢ R√©solution de probl√®mes\n‚Ä¢ Optimisation serveur\n‚Ä¢ Meilleures pratiques`,
                    inline: false
                }
            )
            .setColor('#3498db')
            .setThumbnail('https://i.imgur.com/s74nSIc.png');
    },

    createTechnicalEmbed() {
        return new EmbedBuilder()
            .setTitle('üîß **SUPPORT TECHNIQUE**')
            .setDescription('**Assistance technique avanc√©e**')
            .addFields(
                {
                    name: '‚öôÔ∏è **Domaines d\'expertise**',
                    value: `‚Ä¢ **Permissions Discord** : Configuration et d√©pannage\n‚Ä¢ **Int√©grations API** : Webhook, bots tiers\n‚Ä¢ **Performance** : Optimisation et monitoring\n‚Ä¢ **S√©curit√©** : Configuration s√©curis√©e`,
                    inline: false
                },
                {
                    name: 'üõ†Ô∏è **Diagnostics disponibles**',
                    value: `‚Ä¢ Analyse des permissions\n‚Ä¢ Test de connectivit√©\n‚Ä¢ V√©rification configuration\n‚Ä¢ Audit de s√©curit√©`,
                    inline: true
                },
                {
                    name: 'üìä **Monitoring**',
                    value: `‚Ä¢ Performances en temps r√©el\n‚Ä¢ Logs d√©taill√©s\n‚Ä¢ M√©triques d'usage\n‚Ä¢ Alertes automatiques`,
                    inline: true
                }
            )
            .setColor('#f39c12')
            .setThumbnail('https://i.imgur.com/s74nSIc.png');
    },

    createGDPRSupportEmbed() {
        return new EmbedBuilder()
            .setTitle('üìã **SUPPORT RGPD**')
            .setDescription('**Protection des donn√©es et droits utilisateurs**')
            .addFields(
                {
                    name: 'üõ°Ô∏è **Droits disponibles**',
                    value: `‚Ä¢ **\`/my-data\`** : Consulter vos donn√©es (Art. 15)\n‚Ä¢ **\`/export-my-data\`** : Portabilit√© (Art. 20)\n‚Ä¢ **\`/appeal\`** : Rectification/Effacement\n‚Ä¢ **Support d√©di√©** : D√©l√©gu√© √† la protection`,
                    inline: false
                },
                {
                    name: '‚è±Ô∏è **D√©lais l√©gaux**',
                    value: `‚Ä¢ **R√©ponse** : < 72h\n‚Ä¢ **Traitement** : < 1 mois\n‚Ä¢ **Urgence** : < 24h\n‚Ä¢ **Complexe** : + 2 mois`,
                    inline: true
                },
                {
                    name: 'üìû **Contact DPO**',
                    value: `‚Ä¢ **Email** : dpo@team7.fr\n‚Ä¢ **Formulaire** : \`/appeal\`\n‚Ä¢ **T√©l√©phone** : +33 1 XX XX XX XX\n‚Ä¢ **Courrier** : Team7 DPO Service`,
                    inline: true
                }
            )
            .setColor('#27ae60')
            .setThumbnail('https://i.imgur.com/s74nSIc.png');
    },

    createSuggestionEmbed() {
        return new EmbedBuilder()
            .setTitle('üí° **SUGGESTIONS D\'AM√âLIORATION**')
            .setDescription('**Votre feedback fa√ßonne Team7 Bot**')
            .addFields(
                {
                    name: 'üéØ **Types de suggestions**',
                    value: `‚Ä¢ **Nouvelles fonctionnalit√©s** : Commandes, outils\n‚Ä¢ **Am√©liorations UX** : Interface, ergonomie\n‚Ä¢ **Performance** : Optimisations techniques\n‚Ä¢ **Int√©grations** : Services tiers, API`,
                    inline: false
                },
                {
                    name: 'üìà **Processus d\'√©valuation**',
                    value: `‚Ä¢ **R√©ception** : Imm√©diate\n‚Ä¢ **√âvaluation** : 7 jours\n‚Ä¢ **Priorisation** : Roadmap\n‚Ä¢ **D√©veloppement** : Selon planning`,
                    inline: true
                },
                {
                    name: 'üèÜ **Programme contributeur**',
                    value: `‚Ä¢ **Badge contributeur** : Suggestions accept√©es\n‚Ä¢ **Acc√®s beta** : Nouvelles fonctionnalit√©s\n‚Ä¢ **Mentions** : Changelog officiel\n‚Ä¢ **R√©compenses** : Avantages exclusifs`,
                    inline: true
                }
            )
            .setColor('#9b59b6')
            .setThumbnail('https://i.imgur.com/s74nSIc.png');
    },

    createBugReportButtons() {
        return new ActionRowBuilder()
            .addComponents(
                new ButtonBuilder()
                    .setCustomId('support_bug_form')
                    .setLabel('üìù Formulaire de bug')
                    .setStyle(ButtonStyle.Danger),
                new ButtonBuilder()
                    .setCustomId('support_bug_critical')
                    .setLabel('üö® Bug critique')
                    .setStyle(ButtonStyle.Danger),
                new ButtonBuilder()
                    .setCustomId('support_bug_status')
                    .setLabel('üìä Statut des bugs')
                    .setStyle(ButtonStyle.Secondary)
            );
    },

    createQuestionButtons() {
        return new ActionRowBuilder()
            .addComponents(
                new ButtonBuilder()
                    .setCustomId('support_faq')
                    .setLabel('üìö FAQ compl√®te')
                    .setStyle(ButtonStyle.Primary),
                new ButtonBuilder()
                    .setCustomId('support_tutorial')
                    .setLabel('üéì Tutoriels')
                    .setStyle(ButtonStyle.Secondary),
                new ButtonBuilder()
                    .setCustomId('support_ask_question')
                    .setLabel('‚ùì Poser une question')
                    .setStyle(ButtonStyle.Success)
            );
    },

    createTechnicalButtons() {
        return new ActionRowBuilder()
            .addComponents(
                new ButtonBuilder()
                    .setCustomId('support_diagnostic')
                    .setLabel('üîç Diagnostic')
                    .setStyle(ButtonStyle.Primary),
                new ButtonBuilder()
                    .setCustomId('support_performance')
                    .setLabel('üìä Performance')
                    .setStyle(ButtonStyle.Secondary),
                new ButtonBuilder()
                    .setCustomId('support_technical_form')
                    .setLabel('üîß Assistance technique')
                    .setStyle(ButtonStyle.Success)
            );
    },

    createGDPRButtons() {
        return new ActionRowBuilder()
            .addComponents(
                new ButtonBuilder()
                    .setCustomId('support_gdpr_access')
                    .setLabel('üëÅÔ∏è Acc√®s aux donn√©es')
                    .setStyle(ButtonStyle.Primary),
                new ButtonBuilder()
                    .setCustomId('support_gdpr_export')
                    .setLabel('üì• Export des donn√©es')
                    .setStyle(ButtonStyle.Secondary),
                new ButtonBuilder()
                    .setCustomId('support_gdpr_delete')
                    .setLabel('üóëÔ∏è Suppression')
                    .setStyle(ButtonStyle.Danger)
            );
    },

    createSuggestionButtons() {
        return new ActionRowBuilder()
            .addComponents(
                new ButtonBuilder()
                    .setCustomId('support_suggest_feature')
                    .setLabel('‚ú® Nouvelle fonctionnalit√©')
                    .setStyle(ButtonStyle.Success),
                new ButtonBuilder()
                    .setCustomId('support_suggest_improvement')
                    .setLabel('üìà Am√©lioration')
                    .setStyle(ButtonStyle.Primary),
                new ButtonBuilder()
                    .setCustomId('support_roadmap')
                    .setLabel('üó∫Ô∏è Roadmap')
                    .setStyle(ButtonStyle.Secondary)
            );
    }
};
