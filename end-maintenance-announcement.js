// Script pour annoncer la fin de maintenance
import { Client, GatewayIntentBits } from 'discord.js';
import { config } from 'dotenv';

config();

const client = new Client({
    intents: [GatewayIntentBits.Guilds, GatewayIntentBits.GuildMessages]
});

client.once('ready', async () => {
    console.log('Bot connect√© pour l\'annonce de fin de maintenance');
    
    try {
        // ID du canal o√π envoyer l'annonce
        const channelId = '1368918056042102895'; // Canal g√©n√©ral
        const channel = await client.channels.fetch(channelId);
        
        if (!channel) {
            console.error('Canal introuvable');
            return;
        }

        const endMaintenanceEmbed = {
            color: 0x00FF88, // Vert pour succ√®s
            title: '‚úÖ **MAINTENANCE TERMIN√âE - SYST√àME GAMING OP√âRATIONNEL**',
            description: '**Le nouveau syst√®me de r√¥les gaming est maintenant pleinement fonctionnel !**',
            fields: [
                {
                    name: 'üéâ **Maintenance termin√©e avec succ√®s**',
                    value: '‚Ä¢ Tous les bugs ont √©t√© corrig√©s\n‚Ä¢ Le syst√®me est maintenant stable\n‚Ä¢ Toutes les fonctionnalit√©s sont op√©rationnelles\n‚Ä¢ Les permissions sont correctement configur√©es',
                    inline: false
                },
                {
                    name: 'üîß **Corrections apport√©es**',
                    value: '‚Ä¢ **Acc√®s sp√©cifique aux salons** : Vous n\'avez plus acc√®s qu\'aux salons de vos jeux\n‚Ä¢ **Suppression des r√¥les fonctionnelle** : Retirer une r√©action retire bien l\'acc√®s\n‚Ä¢ **Gestion des permissions optimis√©e** : Plus de bugs d\'affichage\n‚Ä¢ **Syst√®me anti-erreur renforc√©**',
                    inline: false
                },
                {
                    name: 'üéÆ **Nouvelles fonctionnalit√©s**',
                    value: '‚Ä¢ **Acc√®s cibl√©** : Seuls les salons de vos jeux sont visibles\n‚Ä¢ **R√¥le LOL activ√©** : League of Legends est maintenant disponible\n‚Ä¢ **Boutons interactifs** : Interface moderne avec boutons\n‚Ä¢ **Statistiques avanc√©es** : Suivez votre activit√© gaming\n‚Ä¢ **Notifications MP** : Confirmations personnalis√©es\n‚Ä¢ **Cooldown intelligent** : Protection anti-spam de 30 secondes',
                    inline: false
                },
                {
                    name: 'üìã **Comment utiliser le syst√®me**',
                    value: '1Ô∏è‚É£ Allez dans <#1368919061425164288>\n2Ô∏è‚É£ Cliquez sur les r√©actions ou boutons de vos jeux\n3Ô∏è‚É£ Acc√©dez instantan√©ment aux salons correspondants\n4Ô∏è‚É£ Recliquez pour retirer l\'acc√®s si besoin',
                    inline: false
                },
                {
                    name: 'üéØ **Jeux disponibles**',
                    value: 'üî´ **Call of Duty** ‚Ä¢ üéØ **Valorant** ‚Ä¢ üèóÔ∏è **Fortnite**\n‚öΩ **EA FC** ‚Ä¢ üöó **Rocket League** ‚Ä¢ üéÆ **Nintendo** ‚Ä¢ ‚öîÔ∏è **League of Legends**',
                    inline: false
                },
                {
                    name: '‚ö° **Avantages du nouveau syst√®me**',
                    value: '‚Ä¢ **Plus rapide** et plus stable\n‚Ä¢ **Interface moderne** avec boutons\n‚Ä¢ **Gestion intelligente** des permissions\n‚Ä¢ **Acc√®s pr√©cis** aux salons de vos jeux uniquement\n‚Ä¢ **Syst√®me de cooldown** pour √©viter le spam\n‚Ä¢ **Notifications personnalis√©es** en MP',
                    inline: false
                }
            ],
            footer: {
                text: '√âquipe technique ‚Ä¢ Le syst√®me est maintenant 100% op√©rationnel',
                icon_url: client.user.displayAvatarURL()
            },
            timestamp: new Date().toISOString()
        };

        // Envoyer l'annonce avec mentions
        await channel.send({
            content: '@everyone <@&1387536419588931616>',
            embeds: [endMaintenanceEmbed]
        });

        console.log('‚úÖ Annonce de fin de maintenance envoy√©e avec succ√®s');
        
    } catch (error) {
        console.error('‚ùå Erreur lors de l\'envoi de l\'annonce:', error);
    }
    
    await client.destroy();
    process.exit(0);
});

client.login(process.env.DISCORD_TOKEN);
